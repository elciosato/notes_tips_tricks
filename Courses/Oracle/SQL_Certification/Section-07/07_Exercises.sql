CREATE TABLE bricks (brick_id  INTEGER
, colour    VARCHAR2 (10)
, shape     VARCHAR2 (10)
, weight    INTEGER);

INSERT INTO bricks VALUES (1, 'blue', 'cube', 1);
INSERT INTO bricks VALUES (2, 'blue', 'pyramid', 2);
INSERT INTO bricks VALUES (3, 'red', 'cube', 1);
INSERT INTO bricks VALUES (4, 'red', 'cube', 2);
INSERT INTO bricks VALUES (5, 'red', 'pyramid', 3);
INSERT INTO bricks VALUES (6, 'green', 'pyramid', 1);

COMMIT;

CREATE TABLE stores (store_id  INTEGER
, name      VARCHAR2 (50));

INSERT ALL INTO stores VALUES (1, 'Name 01') INTO stores VALUES (2, 'Name 02') INTO
stores VALUES (3, 'Name 03') SELECT *
             FROM dual;

COMMIT;

SELECT *
FROM stores s
WHERE ROWID < (SELECT MAX (ROWID)
               FROM stores
               WHERE store_id = s.store_id
);

DELETE FROM stores s
WHERE ROWID < (SELECT MAX (ROWID)
               FROM stores
               WHERE store_id = s.store_id
);

SELECT *
FROM stores;

SELECT q'[ Elcio's test]'  AS opt1
     , 'Elcio''s test'     AS opt2
FROM dual;

CREATE TABLE test_products (id    NUMBER GENERATED BY DEFAULT AS IDENTITY
, name  VARCHAR2 (50)
, CONSTRAINT test_products_pk PRIMARY KEY (id));

ALTER TABLE test_products MODIFY id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY;

CREATE SEQUENCE sq_test_products;

ALTER TABLE test_products MODIFY id DROP IDENTITY;

ALTER TABLE test_products MODIFY id NUMBER DEFAULT sq_test_products.NEXTVAL;

SELECT sq_test_products.NEXTVAL
FROM dual;

INSERT INTO test_products (name) VALUES ('Name04');

SELECT *
FROM test_products;

COMMIT;

CREATE TABLE stores (store_id  INTEGER GENERATED BY DEFAULT ON NULL AS IDENTITY
, name      VARCHAR2 (50)
, CONSTRAINT pk_stores PRIMARY KEY (store_id));

ALTER TABLE stores MODIFY store_id DROP IDENTITY;

CREATE TABLE products (product_id      INTEGER
, name            VARCHAR2 (50)
, product_cost    NUMBER (5, 2)
, product_retail  NUMBER (5, 2)
, product_type    VARCHAR2 (50)
, store_id        INTEGER NOT NULL
, CONSTRAINT pk_products PRIMARY KEY (product_id)
, CONSTRAINT fk_products_stores FOREIGN KEY (store_id) REFERENCES stores (store_id));

INSERT INTO stores VALUES (1, 'Store 1');
INSERT INTO stores VALUES (2, 'Store 2');
INSERT INTO stores VALUES (3, 'Store 3');

COMMIT;

INSERT INTO products (product_id
, name
, product_cost
, product_retail
, product_type
, store_id) VALUES (1001, 'Colgate Toothpaste', 2.25, 5.47, 'hygiene', 2);

INSERT INTO products (product_id
, name
, product_cost
, product_retail
, product_type
, store_id) VALUES (1002, 'Oral B Toothpaste', 2.25, 5.47, 'hygiene', 2);

INSERT INTO products (product_id
, name
, product_cost
, product_retail
, product_type
, store_id) VALUES (1003, 'Listerine Mounthwash', 1.75, 4.81, 'hygiene', 2);

COMMIT;